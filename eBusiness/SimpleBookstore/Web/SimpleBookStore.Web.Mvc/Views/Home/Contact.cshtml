@model SimpleBookStore.Web.Mvc.ViewModels.Home.ContactUsViewModel
@{
    ViewBag.Title = "Contact";
}
<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Contact", "Home", FormMethod.Post, new { @class = "form-horizontal"}))
{
    <div class="form-group">
        @Html.LabelFor(x => x.To, new {@class = "col-md-2 control-label"})
        <div class="col-sm-10">
            @Html.EditorFor(x => x.To, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.To)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.From, new {@class = "col-md-2 control-label"})
        <div class="col-sm-10">
            @Html.EditorFor(x => x.From, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.From)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Title, new {@class = "col-md-2 control-label"})
        <div class="col-sm-10">
            @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Title)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Content, new {@class = "col-md-2 control-label"})
        <div class="col-sm-10">
            @Html.EditorFor(x => x.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Content)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-success">Send email</button>
        </div>
    </div>
}